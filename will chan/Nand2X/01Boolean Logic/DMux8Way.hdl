// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
	Mux(a=in,b=false,sel=sel[0],out=a1);
	Mux(a=false,b=false,sel=sel[0],out=b1);
	Mux(a=a1,b=b1,sel=sel[1],out=c1);
	Mux(a=false,b=false,sel=sel[0],out=a2);
	Mux(a=false,b=false,sel=sel[0],out=b2);
	Mux(a=a2,b=b2,sel=sel[1],out=c2);
	Mux(a=c1,b=c2,sel=sel[2],out=a);

	Mux(a=false,b=in,sel=sel[0],out=a3);
	Mux(a=false,b=false,sel=sel[0],out=b3);
	Mux(a=a3,b=b3,sel=sel[1],out=c3);
	Mux(a=false,b=false,sel=sel[0],out=a4);
	Mux(a=false,b=false,sel=sel[0],out=b4);
	Mux(a=a4,b=b4,sel=sel[1],out=c4);
	Mux(a=c3,b=c4,sel=sel[2],out=b);

	Mux(a=false,b=false,sel=sel[0],out=a5);
	Mux(a=in,b=false,sel=sel[0],out=b5);
	Mux(a=a5,b=b5,sel=sel[1],out=c5);
	Mux(a=false,b=false,sel=sel[0],out=a6);
	Mux(a=false,b=false,sel=sel[0],out=b6);
	Mux(a=a6,b=b6,sel=sel[1],out=c6);
	Mux(a=c5,b=c6,sel=sel[2],out=c);

	Mux(a=false,b=false,sel=sel[0],out=a7);
	Mux(a=false,b=in,sel=sel[0],out=b7);
	Mux(a=a7,b=b7,sel=sel[1],out=c7);
	Mux(a=false,b=false,sel=sel[0],out=a8);
	Mux(a=false,b=false,sel=sel[0],out=b8);
	Mux(a=a8,b=b8,sel=sel[1],out=c8);
	Mux(a=c7,b=c8,sel=sel[2],out=d);

	Mux(a=false,b=false,sel=sel[0],out=a9);
	Mux(a=false,b=false,sel=sel[0],out=b9);
	Mux(a=a9,b=b9,sel=sel[1],out=c9);
	Mux(a=in,b=false,sel=sel[0],out=a10);
	Mux(a=false,b=false,sel=sel[0],out=b10);
	Mux(a=a10,b=b10,sel=sel[1],out=c10);
	Mux(a=c9,b=c10,sel=sel[2],out=e);

	Mux(a=false,b=false,sel=sel[0],out=a11);
	Mux(a=false,b=false,sel=sel[0],out=b11);
	Mux(a=a11,b=b11,sel=sel[1],out=c11);
	Mux(a=false,b=in,sel=sel[0],out=a12);
	Mux(a=false,b=false,sel=sel[0],out=b12);
	Mux(a=a12,b=b12,sel=sel[1],out=c12);
	Mux(a=c11,b=c12,sel=sel[2],out=f);

	Mux(a=false,b=false,sel=sel[0],out=a13);
	Mux(a=false,b=false,sel=sel[0],out=b13);
	Mux(a=a13,b=b13,sel=sel[1],out=c13);
	Mux(a=false,b=false,sel=sel[0],out=a14);
	Mux(a=in,b=false,sel=sel[0],out=b14);
	Mux(a=a14,b=b14,sel=sel[1],out=c14);
	Mux(a=c13,b=c14,sel=sel[2],out=g);

	Mux(a=false,b=false,sel=sel[0],out=a15);
	Mux(a=false,b=false,sel=sel[0],out=b15);
	Mux(a=a15,b=b15,sel=sel[1],out=c15);
	Mux(a=false,b=false,sel=sel[0],out=a16);
	Mux(a=false,b=in,sel=sel[0],out=b16);
	Mux(a=a16,b=b16,sel=sel[1],out=c16);
	Mux(a=c15,b=c16,sel=sel[2],out=h);
}